WAF.Widget.prototype.center = function(config){	var	htmlObj 	= this.$domNode,	width		= this.getWidth(),	parent		= htmlObj.parent(),	height		= this.getHeight();		if(parent.attr('id') === $('body').attr('id')){		parent = $(window);	}		/**	 * Config : 	 *    center 			==> 'v' : only vertically	 *				 			'h' : only horizontally	 *				 			'vh': horizontally and vertically	 **/	if(arguments.length == 0){		htmlObj.css({			left	: (parent.width() - width)/2,			top		: (parent.height() - height)/2		});				return;	}		switch(config.center){		case 'v' :			htmlObj.css({				top		: (parent.height() - height)/2			});			break;		case 'h' :			htmlObj.css({				left	: (parent.width() - width)/2			});			break;		case 'vh' :			htmlObj.css({				left	: (parent.width() - width)/2,				top		: (parent.height() - height)/2			});			break;	}}function parseUri (str) {	var	o   = parseUri.options,		m   = o.parser[o.strictMode ? "strict" : "loose"].exec(str),		uri = {},		i   = 14;	while (i--) uri[o.key[i]] = m[i] || "";	uri[o.q.name] = {};	uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {		if ($1) uri[o.q.name][$1] = $2;	});	return uri;};parseUri.options = {	strictMode: false,	key: ["source","protocol","authority","userInfo","user","password","host","port","relative","path","directory","file","query","anchor"],	q:   {		name:   "queryKey",		parser: /(?:^|&)([^&=]*)=?([^&]*)/g	},	parser: {		strict: /^(?:([^:\/?#]+):)?(?:\/\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?))?((((?:[^?#\/]*\/)*)([^?#]*))(?:\?([^#]*))?(?:#(.*))?)/,		loose:  /^(?:(?![^:@]+:[^:@\/]*@)([^:\/?#.]+):)?(?:\/\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\/?#]*)(?::(\d*))?)(((\/(?:[^?#](?![^?#\/]*\.[^?#\/.]+(?:[?#]|$)))*\/?)?([^?#\/]*))(?:\?([^#]*))?(?:#(.*))?)/	}};